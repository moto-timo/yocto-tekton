---
apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: meta-python-build-patches
  namespace: tekton-pipelines
spec:
  steps:
    - name: setup-workspace
      image: registry.hub.docker.com/threexc/yocto-builder:33
      workingDir: /workspace
      script: |
        #!/bin/bash -e
        
        if [ -d "poky/build/conf" ]; then
            echo "Clearing old build conf..."
            rm -rf poky/build/conf
        fi

        if [ -d "poky/build/tmp" ]; then
            echo "Clearing old build outputs..."
            rm -rf poky/build/tmp
        fi

        if [ ! -d "poky" ]; then
            echo "Cloning poky repo..."
            git clone git://git.yoctoproject.org/poky
        fi

        if [ ! -d "meta-openembedded" ]; then
            echo "Cloning meta-openembedded repo..."
            git clone git://git.openembedded.org/meta-openembedded
        fi

        if [ ! -d "yocto-tekton" ]; then
            echo "Cloning yocto-tekton repo..."
            git clone https://github.com/threexc/yocto-tekton.git
        fi
      volumeMounts:
      - name: build
        mountPath: /workspace

    - name: update-repos
      image: registry.hub.docker.com/threexc/yocto-builder:33
      workingDir: /workspace
      script: |
        #!/bin/bash -e
        echo "Rebasing poky to latest master..."
        (cd poky && git checkout master && git pull --rebase)

        echo "Rebasing meta-openembedded to latest master-next..."
        (cd meta-openembedded && git checkout master-next && git pull --rebase)

        echo "Rebasing yocto-tekton to latest master..."
        (cd yocto-tekton && git pull --rebase && git checkout main)
      volumeMounts:
      - name: build
        mountPath: /workspace

    - name: setup-conf
      image: registry.hub.docker.com/threexc/yocto-builder:33
      workingDir: /workspace
      script: |
        #!/bin/bash
        if [ ! -d poky/build/conf/ ]; then
          cd poky && source oe-init-build-env build
          echo "BBLAYERS ?= \" \\
                  /workspace/poky/meta \\
                  /workspace/poky/meta-poky \\
                  /workspace/poky/meta-yocto-bsp \\
                  /workspace/meta-openembedded/meta-python \\
                  /workspace/meta-openembedded/meta-oe \\
                  /workspace/meta-openembedded/meta-networking \\
                  /workspace/meta-openembedded/meta-filesystems \\
                  /workspace/meta-openembedded/meta-webserver \\
                  \"" > conf/bblayers.conf
          # Add required elements to local.conf for ptest image build
          echo "INHERIT += \"testimage\"" >> conf/local.conf
          echo "TEST_SUITES = \"ping ssh rpm ptest\"" >> conf/local.conf
          echo "DISTRO_FEATURES_append = \" ptest\"" >> conf/local.conf
          echo "DISTRO_FEATURES_append = \" ptest systemd pam\"" >> conf/local.conf
          echo "FORTRAN_forcevariable = \",fortran\"" >> conf/local.conf
          echo "IMAGE_FSTYPES = \"tar.gz container\"" >> conf/local.conf
          echo "PREFERRED_PROVIDER_virtual/kernel = \"linux-dummy\"" >> conf/local.conf
        fi
      volumeMounts:
      - name: build
        mountPath: /workspace

    - name: build-patches
      image: registry.hub.docker.com/threexc/yocto-builder:33
      workingDir: /workspace
      script: |
        #!/bin/bash
        # Add yocto-tekton repo to PATH
        export PATH="/workspace/yocto-tekton/meta-python/scripts:$PATH"
        # Get the latest python recipe changes and bitbake them using --diff-filter for Added (A), Copied (C), 
        # Modified (M), or Renamed (R) files. The filter character lines will always start with an upper-case 
        # letter (commit hashes don't use them). Also ignore deleted files (D flag to --diff-filter)
        COMMIT_LOG="$(get-recipe-changes.sh)"

        echo "${COMMIT_LOG}"

        # Exit cleanly if there is no difference between master and master-next
        if [ -z "${COMMIT_LOG}" ]; then
            echo "No difference between master and master-next branches. Exiting..."
            exit 0
        fi
        
        RECIPE_NAME=""

        cd poky && source oe-init-build-env build
        export LANG=en_US.UTF-8

        RECIPE_LIST=$(get-bitbake-list.sh "${COMMIT_LOG}")

        echo ${RECIPE_LIST} | xargs bitbake
        echo "The following list was sent to bitbake: "
        for recipe in $RECIPE_LIST; do
            echo $recipe
        done
      volumeMounts:
      - name: build
        mountPath: /workspace
